from pygame import *
from random import randint

font.init()
font = font.Font(None, 35)
lose1 = font.render('El jugador 1 pierde, nub', True, (180, 0, 0))
lose2 = font.render('El jugador 2 pierde, nub', True, (180, 0, 0))

img_back = 'Fondo.jpg'
img_p1 = 'Raqueta_1-removebg-preview.png'
img_p2 = 'Raqueta_2-removebg-preview.png'
img_ball = 'bolita-removebg-preview.png'

score = 0
score2 = 0
goal = 15
lost = 0
max_lost = 5

class GameSprite(sprite.Sprite):
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        sprite.Sprite.__init__(self)

        self.image = transform.scale(image.load(player_image), (size_x, size_y))
        self.speed = player_speed
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y

    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))

# clase del jugador principal
class Player(GameSprite):
    def update_r(self):
        keys = key.get_pressed()
        if keys[K_UP] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys[K_DOWN] and self.rect.y < win_width - 80:
            self.rect.y += self.speed

    def update_l(self):
        keys = key.get_pressed()
        if keys[K_w] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys[K_s] and self.rect.y < win_width - 80:
            self.rect.y += self.speed

#transform.scale(image.load(img_back), (win_width, win_height))
back = (200, 255, 255)
win_width = 650
win_height = 500
display.set_caption('Ping-Pong')
window = display.set_mode((win_width, win_height))
#back = transform.scale(image.load(img_back), (win_width, win_height))
window.fill(back)

racket1 = Player(img_p1, 30, 200, 70, 130, 10)
racket2 = Player(img_p2, 520, 200, 70, 130, 10)
ball = GameSprite(img_ball, 200, 200, 50, 50, 50)

speed_x = 3
speed_y = 3

finish = False

run = True

clock = time.Clock()
FPS = 60

while run:
    for e in event.get():
        if e.type == QUIT:
            run = False

    if finish != True:
        window.fill(back)
        racket1.update_l()
        racket2.update_r()
        ball.rect.x += speed_x
        ball.rect.y += speed_y

        if sprite.collide_rect(racket1, ball) or sprite.collide_rect(racket2, ball):
            speed_x *= -1
            speed_y *= 1

        if ball.rect.y > win_height-50 or ball.rect.y < 0:
            speed_y *= -1

        if ball.rect.x < 0:
            finish = True
            window.blit(lose1, (185, 200))
            game_over = True

        if ball.rect.x > win_width:
            finish = True
            window.blit(lose2, (185, 200))

    racket1.reset()
    racket2.reset()
    ball.reset()

    display.update()
    clock.tick(FPS)
